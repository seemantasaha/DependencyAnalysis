[ { "id" : "[ passwordsEqual_safeLUSS#0 ] start", "instruction_count" : "1", "cost" : "1", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#1" : "Implicit" } },
{ "id" : "[ passwordsEqual_safeLUSS#1 ] Constant(I,1) LocalStore(I,2) Constant(I,1) LocalStore(I,3) LocalLoad(Ljava/lang/Object;,0) Invoke(VIRTUAL,Ljava/lang/String;,length,()I) ", "instruction_count" : "6", "cost" : "6", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#2" : "Invoke" } },
{ "id" : "[ passwordsEqual_safeLUSS#2 ] LocalStore(I,4) LocalLoad(Ljava/lang/Object;,1) Invoke(VIRTUAL,Ljava/lang/String;,length,()I) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#3" : "Invoke" } },
{ "id" : "[ passwordsEqual_safeLUSS#3 ] LocalStore(I,5) LocalLoad(I,4) LocalLoad(I,5) ConditionalBranch(I,eq,15) ", "instruction_count" : "4", "cost" : "4", "secret_dependent_branch" : "true", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#5" : "TRUE", "passwordsEqual_safeLUSS#4" : "FALSE" } },
{ "id" : "[ passwordsEqual_safeLUSS#4 ] Constant(I,0) LocalStore(I,2) ", "instruction_count" : "2", "cost" : "2", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#5" : "Implicit" } },
{ "id" : "[ passwordsEqual_safeLUSS#5 ] LocalLoad(I,4) LocalLoad(I,5) Invoke(STATIC,Ljava/lang/Math;,min,(II)I) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#6" : "Invoke" } },
{ "id" : "[ passwordsEqual_safeLUSS#6 ] LocalStore(I,6) Constant(I,0) LocalStore(I,7) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#7" : "Implicit" } },
{ "id" : "[ passwordsEqual_safeLUSS#7 ] LocalLoad(I,7) LocalLoad(I,6) ConditionalBranch(I,ge,41) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "true", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#14" : "TRUE", "passwordsEqual_safeLUSS#8" : "FALSE" } },
{ "id" : "[ passwordsEqual_safeLUSS#8 ] LocalLoad(Ljava/lang/Object;,0) LocalLoad(I,7) Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#9" : "Invoke" } },
{ "id" : "[ passwordsEqual_safeLUSS#9 ] LocalLoad(Ljava/lang/Object;,1) LocalLoad(I,7) Invoke(VIRTUAL,Ljava/lang/String;,charAt,(I)C) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#10" : "Invoke" } },
{ "id" : "[ passwordsEqual_safeLUSS#10 ] ConditionalBranch(I,eq,34) ", "instruction_count" : "1", "cost" : "1", "secret_dependent_branch" : "true", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#12" : "TRUE", "passwordsEqual_safeLUSS#11" : "FALSE" } },
{ "id" : "[ passwordsEqual_safeLUSS#11 ] Constant(I,0) LocalStore(I,2) Goto(36) ", "instruction_count" : "3", "cost" : "3", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#13" : "Jump" } },
{ "id" : "[ passwordsEqual_safeLUSS#12 ] Constant(I,1) LocalStore(I,3) ", "instruction_count" : "2", "cost" : "2", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#13" : "Implicit" } },
{ "id" : "[ passwordsEqual_safeLUSS#13 ] LocalLoad(I,7) Constant(I,1) BinaryOp(I,add) LocalStore(I,7) Goto(21) ", "instruction_count" : "5", "cost" : "6", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#7" : "Jump" } },
{ "id" : "[ passwordsEqual_safeLUSS#14 ] LocalLoad(I,2) Return(I) ", "instruction_count" : "2", "cost" : "2", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { "passwordsEqual_safeLUSS#1001001" : "Return" } },
{ "id" : "[ passwordsEqual_safeLUSS#1001001 ] end", "instruction_count" : "1", "cost" : "1", "secret_dependent_branch" : "false", "incoming" : { }, "outgoing" : { } } ]