package gui;

import core.Procedure;
import core.Program;
import java.awt.Window;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

@SuppressWarnings({"rawtypes", "unchecked", "serial"})

/**
 *
 * @author zzk
 */
public class LocationFrame extends javax.swing.JDialog {

  /**
   * Creates new form LocationFrame
   */
  public LocationFrame(MainFrame mainFrame) {
    // make this guy modal, so that the MainFrame waits until it is closed
    super((Window)null);
    setModal(true);
    
    initComponents();
    
    this.mainFrame = mainFrame;
    
    Set<Procedure> procSet = Program.getProcedureSet();
    for (Procedure proc : procSet) {
      String clsName = proc.getClassName();
      String procName = proc.getSelectorName();
      Set<String> procNameSet = this.methodSetMap.get(clsName);
      if (procNameSet == null) {
        procNameSet = new TreeSet<>();
        this.methodSetMap.put(clsName, procNameSet);
      }
      procNameSet.add(procName);
    }
    
    for (Map.Entry<String, Set<String>> mthSetEnt : this.methodSetMap.entrySet())
      this.classComboBox.addItem(mthSetEnt.getKey());
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    classLabel = new javax.swing.JLabel();
    methodLabel = new javax.swing.JLabel();
    classComboBox = new javax.swing.JComboBox();
    methodComboBox = new javax.swing.JComboBox();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    sourceCheckBox = new javax.swing.JCheckBox();
    sourceClassLabel = new javax.swing.JLabel();
    sourceMethodLabel = new javax.swing.JLabel();
    sourceClassComboBox = new javax.swing.JComboBox();
    sourceMethodComboBox = new javax.swing.JComboBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    classLabel.setText("Class");

    methodLabel.setText("Method");

    classComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        classComboBoxActionPerformed(evt);
      }
    });

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    sourceCheckBox.setText("If you want to see a partial CG (from method below to method above)");
    sourceCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        sourceCheckBoxActionPerformed(evt);
      }
    });

    sourceClassLabel.setText("Class");

    sourceMethodLabel.setText("Method");

    sourceClassComboBox.setEnabled(false);
    sourceClassComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        sourceClassComboBoxActionPerformed(evt);
      }
    });

    sourceMethodComboBox.setEnabled(false);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(sourceMethodLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(sourceMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(sourceClassLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(sourceClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(cancelButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(okButton)
            .addContainerGap())))
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(methodLabel)
              .addComponent(classLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(methodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(sourceCheckBox))
        .addGap(0, 0, Short.MAX_VALUE))
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {classComboBox, methodComboBox});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(classLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(methodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(methodLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(sourceCheckBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(sourceClassLabel)
          .addComponent(sourceClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(sourceMethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(sourceMethodLabel))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(okButton)
          .addComponent(cancelButton))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void classComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboBoxActionPerformed
    this.methodComboBox.removeAllItems();
    String clsName = (String)this.classComboBox.getSelectedItem();
    Set<String> mthNameSet = this.methodSetMap.get(clsName);
    for (String mthName : mthNameSet)
      this.methodComboBox.addItem(mthName);
  }//GEN-LAST:event_classComboBoxActionPerformed

  private void sourceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceCheckBoxActionPerformed
    if (this.sourceCheckBox.isSelected()) {
      this.sourceClassComboBox.setEnabled(true);
      this.sourceMethodComboBox.setEnabled(true);
      
      for (Map.Entry<String, Set<String>> mthSetEnt : this.methodSetMap.entrySet())
        this.sourceClassComboBox.addItem(mthSetEnt.getKey());
    } else {
      this.sourceClassComboBox.setEnabled(false);
      this.sourceMethodComboBox.setEnabled(false);
      
      this.sourceClassComboBox.removeAllItems();
      this.sourceMethodComboBox.removeAllItems();
    }
  }//GEN-LAST:event_sourceCheckBoxActionPerformed

  private void sourceClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceClassComboBoxActionPerformed
    this.sourceMethodComboBox.removeAllItems();
    String clsName = (String)this.sourceClassComboBox.getSelectedItem();
    Set<String> mthNameSet = this.methodSetMap.get(clsName);
    for (String mthName : mthNameSet)
      this.sourceMethodComboBox.addItem(mthName);
  }//GEN-LAST:event_sourceClassComboBoxActionPerformed

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    String procSig = clsName + "." + mthName;
    Procedure proc = Program.getProcedure(procSig);
    if (!this.sourceCheckBox.isSelected())
      this.mainFrame.locateProcedure(proc);
    else {
      String srcClsName = (String)this.sourceClassComboBox.getSelectedItem();
      String srcMthName = (String)this.sourceMethodComboBox.getSelectedItem();
      String srcProcSig = srcClsName + "." + srcMthName;
      Procedure srcProc = Program.getProcedure(srcProcSig);
      this.mainFrame.trimCG(srcProc, proc);
    }
    this.setVisible(false);
  }//GEN-LAST:event_okButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    this.setVisible(false);
  }//GEN-LAST:event_cancelButtonActionPerformed
  
  private MainFrame                 mainFrame;
  private Map<String, Set<String>>  methodSetMap = new TreeMap<>();
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private javax.swing.JComboBox classComboBox;
  private javax.swing.JLabel classLabel;
  private javax.swing.JComboBox methodComboBox;
  private javax.swing.JLabel methodLabel;
  private javax.swing.JButton okButton;
  private javax.swing.JCheckBox sourceCheckBox;
  private javax.swing.JComboBox sourceClassComboBox;
  private javax.swing.JLabel sourceClassLabel;
  private javax.swing.JComboBox sourceMethodComboBox;
  private javax.swing.JLabel sourceMethodLabel;
  // End of variables declaration//GEN-END:variables
}
