package gui;

import com.ibm.wala.ssa.SSAInstruction;
import core.PathLengthAnalysis;
import core.PathLengthAnalysis.Decision;
import core.Procedure;
import core.Program;
import core.Reporter;
import java.io.File;
import java.util.Set;
import javax.swing.JFileChooser;

@SuppressWarnings({"rawtypes", "unchecked", "serial"})

/**
 *
 * @author zzk
 */
public class UnbalancedBranchFrame extends javax.swing.JFrame {

  /**
   * Creates new form UnbalancedBranchFrame
     * @param prog
   */
  public UnbalancedBranchFrame() {
    initComponents();
    
    this.branchList.setModel(new SortedListModel());
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    boundFileChooser = new javax.swing.JFileChooser();
    instCntDiffLabel = new javax.swing.JLabel();
    instCntDiffTextField = new javax.swing.JTextField();
    optionComboBox = new javax.swing.JComboBox();
    resultScrollPane = new javax.swing.JScrollPane();
    branchList = new javax.swing.JList();
    searchButton = new javax.swing.JButton();
    boundFileTextField = new javax.swing.JTextField();
    boundFileOpenButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    instCntDiffLabel.setText("Instruction Count Difference");

    instCntDiffTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    instCntDiffTextField.setText("0");

    optionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Loop Iteration: 1; Recursion: 0", "User Specified Bounds" }));
    optionComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        optionComboBoxActionPerformed(evt);
      }
    });

    resultScrollPane.setViewportView(branchList);

    searchButton.setText("Search");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });

    boundFileTextField.setEnabled(false);

    boundFileOpenButton.setText("Open");
    boundFileOpenButton.setEnabled(false);
    boundFileOpenButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        boundFileOpenButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(resultScrollPane)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(searchButton))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(instCntDiffLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(instCntDiffTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(boundFileTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boundFileOpenButton)))))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(instCntDiffLabel)
          .addComponent(instCntDiffTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(boundFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(boundFileOpenButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(searchButton)
        .addGap(6, 6, 6))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
    SortedListModel listModel = (SortedListModel)this.branchList.getModel();
    listModel.clear();
    
    String instCntDiffStr = this.instCntDiffTextField.getText();
    long instCntDiff = Long.parseLong(instCntDiffStr);
    Set<Decision> decisionSet = PathLengthAnalysis.getDecisionSet(instCntDiff);
    for (Decision decision : decisionSet) {
      Procedure proc = decision.getProcedure();
      SSAInstruction branchInst = decision.getBranchInstruction();
      listModel.add(proc.getFullSignature() + "        " + Reporter.getSSAInstructionString(branchInst));
    }
    
    if (decisionSet.isEmpty())
      listModel.add("No branches found");
  }//GEN-LAST:event_searchButtonActionPerformed

  private void optionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionComboBoxActionPerformed
    String optStr = (String)this.optionComboBox.getSelectedItem();
    if (optStr.equals("User Specified Bounds")) {
      this.boundFileTextField.setEnabled(true);
      this.boundFileOpenButton.setEnabled(true);
    } else {
      this.boundFileTextField.setEnabled(false);
      this.boundFileOpenButton.setEnabled(false);
    }
  }//GEN-LAST:event_optionComboBoxActionPerformed

  private void boundFileOpenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundFileOpenButtonActionPerformed
    this.boundFileChooser.setFileFilter(null);
    this.boundFileChooser.setSelectedFile(null);
    this.boundFileChooser.setMultiSelectionEnabled(false);
    int retVal = this.boundFileChooser.showOpenDialog(this);
    if (retVal == JFileChooser.APPROVE_OPTION) {
      File file = this.boundFileChooser.getSelectedFile();
      this.boundFileTextField.setText(file.getAbsolutePath());
    }
  }//GEN-LAST:event_boundFileOpenButtonActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JFileChooser boundFileChooser;
  private javax.swing.JButton boundFileOpenButton;
  private javax.swing.JTextField boundFileTextField;
  private javax.swing.JList branchList;
  private javax.swing.JLabel instCntDiffLabel;
  private javax.swing.JTextField instCntDiffTextField;
  private javax.swing.JComboBox optionComboBox;
  private javax.swing.JScrollPane resultScrollPane;
  private javax.swing.JButton searchButton;
  // End of variables declaration//GEN-END:variables
}
