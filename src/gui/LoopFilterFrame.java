package gui;

import core.Loop;
import core.Procedure;
import core.Program;
import java.awt.Window;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.TreeSet;

@SuppressWarnings({"rawtypes", "unchecked", "serial"})

/**
 *
 * @author zzk
 */
public class LoopFilterFrame extends javax.swing.JDialog {

  /**
   * Creates new form FilterFrame
   */
  public LoopFilterFrame() {
    // make this guy modal, so that the MainFrame waits until it is closed
    super((Window)null);
    setModal(true);
    
    initComponents();
    
    this.displayList.setModel(new SortedListModel());
    
    loadLoopInfo();
  }
  
  private void loadLoopInfo() {
    //this.classHierarchyMap.put("", new TreeSet<>());
    Set<Procedure> procSet = Program.getProcedureSet();
    for (Procedure proc : procSet) {
      Set<Loop> loopSet = proc.getLoopSet();
      if (loopSet.isEmpty())
        continue;
      String clsName = proc.getClassName();
      String procName = proc.getSelectorName();
      Set<String> procNameSet = this.classHierarchyMap.get(clsName);
      if (procNameSet == null) {
        procNameSet = new TreeSet<>();
        this.classHierarchyMap.put(clsName, procNameSet);
      }
      procNameSet.add(procName);
    }
    
    for (Map.Entry<String, Set<String>> chMapEnt : this.classHierarchyMap.entrySet())
      this.classComboBox.addItem(chMapEnt.getKey());
  }
  
  private void showFilteredLoops() {
    SortedListModel listModel = (SortedListModel)this.displayList.getModel();
    listModel.clear();
    for (Loop loop : this.filteredLoopSet) {
      Procedure proc = loop.getProcedure();
      String procSig = proc.getFullSignature();
      listModel.add(procSig + "------" + loop.getLoopIdentifier());
    }
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    controlPanel = new javax.swing.JPanel();
    classLabel = new javax.swing.JLabel();
    methodLabel = new javax.swing.JLabel();
    loopLabel = new javax.swing.JLabel();
    classComboBox = new javax.swing.JComboBox();
    methodComboBox = new javax.swing.JComboBox();
    loopComboBox = new javax.swing.JComboBox();
    filterLoopButton = new javax.swing.JButton();
    clearLoopButton = new javax.swing.JButton();
    filterClassButton = new javax.swing.JButton();
    clearClassButton = new javax.swing.JButton();
    filterMethodButton = new javax.swing.JButton();
    clearMethodButton = new javax.swing.JButton();
    displayPanel = new javax.swing.JPanel();
    displayScrollPane = new javax.swing.JScrollPane();
    displayList = new javax.swing.JList();
    resetButton = new javax.swing.JButton();
    exitButton = new javax.swing.JButton();

    setName("Filter Frame"); // NOI18N

    classLabel.setText("Class");

    methodLabel.setText("Method");

    loopLabel.setText("Loop");

    classComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        classComboBoxActionPerformed(evt);
      }
    });

    methodComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        methodComboBoxActionPerformed(evt);
      }
    });

    filterLoopButton.setText("Filter");
    filterLoopButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        filterLoopButtonActionPerformed(evt);
      }
    });

    clearLoopButton.setText("Clear");
    clearLoopButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clearLoopButtonActionPerformed(evt);
      }
    });

    filterClassButton.setText("Filter All");
    filterClassButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        filterClassButtonActionPerformed(evt);
      }
    });

    clearClassButton.setText("Clear All");
    clearClassButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clearClassButtonActionPerformed(evt);
      }
    });

    filterMethodButton.setText("Filter All");
    filterMethodButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        filterMethodButtonActionPerformed(evt);
      }
    });

    clearMethodButton.setText("Clear All");
    clearMethodButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clearMethodButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
    controlPanel.setLayout(controlPanelLayout);
    controlPanelLayout.setHorizontalGroup(
      controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(controlPanelLayout.createSequentialGroup()
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(methodLabel)
          .addComponent(classLabel, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(loopLabel, javax.swing.GroupLayout.Alignment.TRAILING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(classComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 505, Short.MAX_VALUE)
          .addComponent(methodComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(loopComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
            .addComponent(filterClassButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(clearClassButton))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
            .addComponent(filterMethodButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(clearMethodButton))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
            .addComponent(filterLoopButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(clearLoopButton)))
        .addContainerGap())
    );

    controlPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clearClassButton, clearLoopButton, clearMethodButton, filterClassButton, filterLoopButton, filterMethodButton});

    controlPanelLayout.setVerticalGroup(
      controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(controlPanelLayout.createSequentialGroup()
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(classLabel)
          .addComponent(filterClassButton)
          .addComponent(clearClassButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(methodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(methodLabel)
          .addComponent(filterMethodButton)
          .addComponent(clearMethodButton))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(loopComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(loopLabel)
          .addComponent(filterLoopButton)
          .addComponent(clearLoopButton)))
    );

    displayScrollPane.setViewportView(displayList);

    resetButton.setText("Reset");
    resetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        resetButtonActionPerformed(evt);
      }
    });

    exitButton.setText("OK");
    exitButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
    displayPanel.setLayout(displayPanelLayout);
    displayPanelLayout.setHorizontalGroup(
      displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(displayScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayPanelLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(resetButton)
        .addGap(18, 18, 18)
        .addComponent(exitButton)
        .addContainerGap())
    );

    displayPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {exitButton, resetButton});

    displayPanelLayout.setVerticalGroup(
      displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(displayPanelLayout.createSequentialGroup()
        .addComponent(displayScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(resetButton)
          .addComponent(exitButton)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void classComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboBoxActionPerformed
    this.methodComboBox.removeAllItems();
    String clsName = (String)this.classComboBox.getSelectedItem();
    Set<String> mthNameSet = this.classHierarchyMap.get(clsName);
    for (String mthName : mthNameSet)
      this.methodComboBox.addItem(mthName);
  }//GEN-LAST:event_classComboBoxActionPerformed

  private void methodComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_methodComboBoxActionPerformed
    this.loopComboBox.removeAllItems();
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    Procedure proc = Program.getProcedure(clsName + "." + mthName);
    if (proc == null)
      return;
    Set<String> loopStrSet = new TreeSet<>();
    Set<Loop> loopSet = proc.getLoopSet();
    for (Loop loop : loopSet)
      loopStrSet.add(loop.getLoopIdentifier());
    
    for (String loopStr : loopStrSet)
      this.loopComboBox.addItem(loopStr);
  }//GEN-LAST:event_methodComboBoxActionPerformed

  private void filterLoopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterLoopButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    Procedure proc = Program.getProcedure(clsName + "." + mthName);
    if (proc == null)
      return;
    String loopId = (String)this.loopComboBox.getSelectedItem();
    Loop loop = proc.getLoop(loopId);
    if (loop != null) {
      this.filteredLoopSet.add(loop);
      showFilteredLoops();
    }
  }//GEN-LAST:event_filterLoopButtonActionPerformed

  private void clearLoopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLoopButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    Procedure proc = Program.getProcedure(clsName + "." + mthName);
    if (proc == null)
      return;
    String loopId = (String)this.loopComboBox.getSelectedItem();
    Loop loop = proc.getLoop(loopId);
    if (loop != null) {
      this.filteredLoopSet.remove(loop);
      showFilteredLoops();
    }
  }//GEN-LAST:event_clearLoopButtonActionPerformed

  private void filterMethodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterMethodButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    Procedure proc = Program.getProcedure(clsName + "." + mthName);
    if (proc == null)
      return;
    Set<Loop> loopSet = proc.getLoopSet();
    for (Loop loop : loopSet)
      this.filteredLoopSet.add(loop);
    showFilteredLoops();
  }//GEN-LAST:event_filterMethodButtonActionPerformed

  private void clearMethodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMethodButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    String mthName = (String)this.methodComboBox.getSelectedItem();
    Procedure proc = Program.getProcedure(clsName + "." + mthName);
    if (proc == null)
      return;
    Set<Loop> loopSet = proc.getLoopSet();
    for (Loop loop : loopSet)
      this.filteredLoopSet.remove(loop);
    showFilteredLoops();
  }//GEN-LAST:event_clearMethodButtonActionPerformed

  private void filterClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterClassButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    Set<Procedure> procSet = Program.getProcedureSet(clsName);
    for (Procedure proc : procSet) {
      Set<Loop> loopSet = proc.getLoopSet();
      for (Loop loop : loopSet)
        this.filteredLoopSet.add(loop);
    }
    showFilteredLoops();
  }//GEN-LAST:event_filterClassButtonActionPerformed

  private void clearClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearClassButtonActionPerformed
    String clsName = (String)this.classComboBox.getSelectedItem();
    Set<Procedure> procSet = Program.getProcedureSet(clsName);
    for (Procedure proc : procSet) {
      Set<Loop> loopSet = proc.getLoopSet();
      for (Loop loop : loopSet)
        this.filteredLoopSet.remove(loop);
    }
    showFilteredLoops();
  }//GEN-LAST:event_clearClassButtonActionPerformed

  private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    this.filteredLoopSet.clear();
    showFilteredLoops();
  }//GEN-LAST:event_resetButtonActionPerformed

  private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
    this.setVisible(false);
  }//GEN-LAST:event_exitButtonActionPerformed
  
  private Map<String, Set<String>>  classHierarchyMap = new TreeMap<>();
  private Set<Loop>                 filteredLoopSet = new HashSet<>();
  
  final public Set<Loop> getFilteredLoopSet() {
    return this.filteredLoopSet;
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox classComboBox;
  private javax.swing.JLabel classLabel;
  private javax.swing.JButton clearClassButton;
  private javax.swing.JButton clearLoopButton;
  private javax.swing.JButton clearMethodButton;
  private javax.swing.JPanel controlPanel;
  private javax.swing.JList displayList;
  private javax.swing.JPanel displayPanel;
  private javax.swing.JScrollPane displayScrollPane;
  private javax.swing.JButton exitButton;
  private javax.swing.JButton filterClassButton;
  private javax.swing.JButton filterLoopButton;
  private javax.swing.JButton filterMethodButton;
  private javax.swing.JComboBox loopComboBox;
  private javax.swing.JLabel loopLabel;
  private javax.swing.JComboBox methodComboBox;
  private javax.swing.JLabel methodLabel;
  private javax.swing.JButton resetButton;
  // End of variables declaration//GEN-END:variables
}
